{"version":3,"sources":["model/types.ts","model/data.ts","model/hero.ts","model/perksCollection.ts","model/perksController.ts","perks.tsx","App.tsx","model/data-edges.ts","serviceWorker.ts","index.tsx","model/edgeCollection.ts"],"names":["levels","statsTypes","skills","name","attribute","agility","value","smarts","spirit","strength","Hero","stats","d4","vigor","slice","SKILL_LEVELS","stats_points","addStatsPoint","n","_this","skill_points","max_skill_points","addSkillPoint","computeSkillPoints","getStats","getPoints","attributes","skills_total","getSkills","addStats","t","sign","arguments","length","undefined","newValue","computeSkill","skill_value","attr_value","add","skill_level","indexOf","new_level","points","new_value","this","filter","s","total_points","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","skill","i","err","return","find","_this$computeSkill","PerkCollection","_EdgeCollection","all_perks","actions","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","selected","push","action_name","concat","console","log","onChange","index","spliced","splice","EdgeCollection","PerksController","edges","hindrances","perks","hero","добавить аттрибут_2_add","добавить аттрибут_2_remove","приобрести черту_2_add","availabe","приобрести черту_2_remove","добавить навык_1_add","добавить навык_1_remove","добавить денег_1_add","добавить денег_1_remove","2","1","all","size","perks_total","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","p","edges_total","hindrances_total","PerkInput","props","react_default","a","createElement","className","describtion","children","PerkList","perkArr","keys","perkMap","map","objectSpread","perk","perks_PerkInput","onClick","action","actionCaption","SpanOfTotal","val","total","PerksTotals","perks_SpanOfTotal","h","PerkController","requirement","attr_names","_attr_names","defineProperty","toString","Stat","minus","plus","Bage","extraClass","App","cur_attr","all_arr","arr","_loop","skill_component","App_Stat","changeSkill","getPointsBages","App_Bage","state","setState","update","statKey","addSkill","_this2","k","ki","parseInt","changeStats","statsControllers","getStatsControllers","bages","hindrancesUsedMap","perks_PerkList","hindrancesUsed","remove","edgesUsedMap","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","edgesUsed","perksUsedMap","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","tmp_key","perksUsed","perks_PerksTotals","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","all_edges","_home_dmitry_ll_sw_builder_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","e","_home_dmitry_ll_sw_builder_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","includes","res","module","parent","ec","dir","count"],"mappings":"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","file":"static/js/main.dcadc6eb.chunk.js","sourcesContent":["export enum levels {\n  d4 = 4,\n  d6 = 6,\n  d8 = 8,\n  d10 = 10,\n  d12 = 12\n}\n\nexport enum statsTypes {\n  agility, smarts, spirit, strength, vigor\n}\n\nexport type heroStats = {\n  [key in statsTypes]: number;\n}\nexport type heroSkill = {\n  name: string\n  attribute: statsTypes\n  value: levels\n}\nexport type heroSkills = heroSkill[]\n","import {statsTypes, heroSkills} from './types'\nexport const skills: heroSkills = [\n  // agility\n  { name: \"Boating\", attribute: statsTypes.agility, value: 0 },\n  { name: \"Driving\", attribute: statsTypes.agility, value: 0 },\n  { name: \"Fighting\", attribute: statsTypes.agility, value: 0 },\n  { name: \"Lockpicking\", attribute: statsTypes.agility, value: 0 },\n  { name: \"Piloting\", attribute: statsTypes.agility, value: 0 },\n  { name: \"Riding\", attribute: statsTypes.agility, value: 0 },\n  { name: \"Shooting\", attribute: statsTypes.agility, value: 0 },\n  { name: \"Stealth\", attribute: statsTypes.agility, value: 0 },\n  { name: \"Swimming\", attribute: statsTypes.agility, value: 0 },\n  { name: \"Throwing\", attribute: statsTypes.agility, value: 0 },\n  // smarts\n  { name: \"Gambling\", attribute: statsTypes.smarts, value: 0 },\n  { name: \"Healing\", attribute: statsTypes.smarts, value: 0 },\n  { name: \"Investigation\", attribute: statsTypes.smarts, value: 0 },\n  { name: \"Notice\", attribute: statsTypes.smarts, value: 0 },\n  { name: \"Repair\", attribute: statsTypes.smarts, value: 0 },\n  { name: \"Streetwise\", attribute: statsTypes.smarts, value: 0 },\n  { name: \"Survival\", attribute: statsTypes.smarts, value: 0 },\n  { name: \"Taunt\", attribute: statsTypes.smarts, value: 0 },\n  { name: \"Tracking\", attribute: statsTypes.smarts, value: 0 },\n  // spirit\n  { name: \"Guts\", attribute: statsTypes.spirit, value: 0 },\n  { name: \"Intimidation\", attribute: statsTypes.spirit, value: 0 },\n  { name: \"Persuasion\", attribute: statsTypes.spirit, value: 0 },\n  // strength\n  { name: \"Climbing\", attribute: statsTypes.strength, value: 0 },\n  // vigor\n  // { name: \"VigorSkill\", attribute: statsTypes.vigor, value: 0 },\n]\n","import { statsTypes, heroStats, levels } from './types'\nimport { skills } from './data'\n\n\n// export const dice = (sides: number): number => Math.random() * sides + 1 | 0\n\nexport default class Hero {\n  private stats: heroStats = {\n    [statsTypes.agility]: levels.d4,\n    [statsTypes.smarts]: levels.d4,\n    [statsTypes.spirit]: levels.d4,\n    [statsTypes.strength]: levels.d4,\n    [statsTypes.vigor]: levels.d4\n  }\n  private skills = skills.slice()\n  private readonly SKILL_LEVELS = [0, 4, 6, 8, 10, 12]\n  private stats_points: number = 5\n  addStatsPoint = (n: number) => {this.stats_points += n}\n  private skill_points: number = 15\n  private max_skill_points: number = 15\n  addSkillPoint = (n: number) => {\n    this.max_skill_points += n\n    this.computeSkillPoints()\n  }\n  getStats = () => this.stats\n  getPoints = () => ({\n    attributes: this.stats_points,\n    skills: this.skill_points,\n    skills_total: this.max_skill_points\n  })\n  getSkills = () => this.skills\n  addStats = (t: statsTypes, add: boolean = true) => {\n    const sign = add ? 1 : -1\n    const newValue = this.stats[t] + 2 * sign\n    if (newValue in levels) {\n      this.stats[t] = newValue\n      this.stats_points -= sign\n      this.computeSkillPoints()\n      return true\n    }\n    return false\n  }\n  computeSkillPoints() {\n    const skills = this.skills.filter(s => s.value !== 0)\n    let total_points = 0\n    for (const skill of skills) {\n      const attr_value = this.stats[skill.attribute]\n      for (let i = 0; i < this.SKILL_LEVELS.indexOf(skill.value); i++)\n        total_points +=\n          this.computeSkill(this.SKILL_LEVELS[i], attr_value).points\n    }\n    this.skill_points = this.max_skill_points + total_points\n  }\n  addSkill(name: string, add: boolean = true) {\n    const skill = this.skills.find((s) => s.name === name)\n    if (skill === undefined) return false\n    const { value, points } =\n      this.computeSkill(skill.value, this.stats[skill.attribute], add)\n    if (points !== 0) {\n      skill.value = value\n      this.skill_points += points\n      return true\n    }\n    return false\n  }\n  computeSkill = (skill_value: number, attr_value: number, add: boolean = true): { value: number, points: number } => {\n    const skill_level = this.SKILL_LEVELS.indexOf(skill_value)\n    const new_level = skill_level + (add ? 1 : -1)\n    if (skill_level === -1 || new_level < 0 || new_level === this.SKILL_LEVELS.length)\n      return { value: skill_value, points: 0 }\n    const new_value = this.SKILL_LEVELS[new_level]\n    return {\n      value: new_value,\n      points: add ?\n        new_value > attr_value ? -2 : -1 :\n        new_value < attr_value ? 1 : 2\n    }\n  }\n}\n","import { EdgeCollection, IEdge } from './edgeCollection'\n\ntype ActionList = {\n  [key: string]: () => void\n}\n\nexport class PerkCollection extends EdgeCollection {\n  actions: ActionList\n  constructor(all_perks: IEdge[], actions: any) {\n    super(all_perks)\n    this.actions = actions\n  }\n  add(key: string): boolean {\n    this.selected.push(key)\n    const action_name = `${key}_add`\n    console.log(`action name is ${action_name}`)\n    this.actions[`${action_name}`]()\n    this.onChange()\n    return true\n  }\n  remove(key: string): boolean {\n    const index = this.selected.indexOf(key)\n    if (index === -1) return false\n    const spliced = this.selected.splice(index, 1)\n    console.log(`removed: ${spliced}`)\n    this.actions[`${key}_remove`]()\n    this.onChange()\n    return true\n  }\n}\n\n/// TESTS\n// if (module.parent === null) {\n//   const pc = new PerkCollection([\n//     { name: 'aa', size: 1 },\n//     { name: 'bb', size: 2 }\n//   ],\n//     {\n//       aa_1_add: () => console.log('aa 1 add'),\n//       bb_2_add: () => console.log('bb 2 add'),\n//       aa_1_remove: () => console.log('aa 1 remove'),\n//       bb_2_remove: () => console.log('bb 2 remove')\n//     }\n//   )\n//   console.dir(pc)\n//   pc.add('aa_1')\n//   console.dir(pc)\n//   pc.remove('aa_1')\n// }","import { Hindrance, Edge } from './data-edges'\nimport { EdgeCollection, IEdge } from './edgeCollection'\nimport { PerkCollection } from './perksCollection'\nimport Hero from './hero'\n\nexport interface IPerkTotals {\n  perks: number\n  perks_total: number\n  edges: number\n  edges_total: number\n  hindrances: {\n    1: number\n    2: number\n  }\n  hindrances_total: {\n    1: number\n    2: number\n  }\n}\n\nexport default class PerksController {\n  edges: EdgeCollection\n  hindrances: EdgeCollection\n  perks: PerkCollection\n  constructor(edges: Edge[], hindrances: Hindrance[], perks: IEdge[], hero: Hero) {\n    this.edges = new EdgeCollection(edges)\n    this.hindrances = new EdgeCollection(hindrances)\n    const actions = {\n      'добавить аттрибут_2_add': () => hero.addStatsPoint(1),\n      'добавить аттрибут_2_remove': () => hero.addStatsPoint(-1),\n      'приобрести черту_2_add': () => this.edges.availabe[1] += 1,\n      'приобрести черту_2_remove': () => this.edges.availabe[1] -= 1,\n      'добавить навык_1_add': () => hero.addSkillPoint(1),\n      'добавить навык_1_remove': () => hero.addSkillPoint(-1),\n      'добавить денег_1_add': () => console.log('add money'),\n      'добавить денег_1_remove': () => console.log('remove money'),\n    }\n    this.perks = new PerkCollection(perks, actions)\n    this.perks.availabe = { 2: 0, 1: 0 }\n    this.edges.availabe = { 2: 0, 1: 0 }\n  }\n  getPoints(): IPerkTotals {\n    const hindrances = { 2: 0, 1: 0 }\n    for (const key of this.hindrances.selected) hindrances[this.hindrances.all[key].size] += 1\n    const perks_total = hindrances[1] + hindrances[2] * 2\n    let perks = 0\n    for (const p of this.perks.selected) perks += this.perks.all[p].size\n    const edges = this.edges.selected.length\n    return {\n      perks,\n      perks_total,\n      edges,\n      edges_total: this.edges.availabe[1],\n      hindrances,\n      hindrances_total: this.hindrances.availabe\n    }\n\n  }\n}\n\n// const hero = new Hero()\n// const pc = new PerksController(edges, hindrances, perks, hero)\n\n// pc.perks.add('add_attr_2')\n// // pc.perks.add('+1 очко к характеристикам_2_remove')\n// console.dir(hero)","import React from 'react';\nimport { EdgeMap } from './model/edgeCollection'\nimport { IPerkTotals } from './model/perksController'\n\nexport const PerkInput: React.FC<{ name: string, describtion: string }> = props => (\n  <div className=\"perk-input\">\n    <p className=\"perk-name\">{props.name}</p>\n    <p>{props.describtion}</p>\n    {props.children}\n  </div>\n)\n\nexport const PerkList: React.FC<{\n  perkMap: EdgeMap,\n  actionCaption: string,\n  action: (key: string) => void\n}> = props => {\n  const perkArr = Object.keys(props.perkMap).map(key => ({ key, ...props.perkMap[key] }))\n  return (\n    <div className=\"perk-list\">\n      {props.children}\n      {perkArr.map(perk => (\n        <PerkInput key={perk.key} name={perk.name} describtion={perk.describtion || 'нет описания'}>\n          <button onClick={() => props.action(perk.key)}>{props.actionCaption}</button>\n        </PerkInput>))}\n    </div>\n  )\n}\n\nconst SpanOfTotal: React.FC<{ val: number, total: number }> = props => (\n  <span className={props.val > props.total ? 'invalid' : ''}>\n    {props.children} {props.val} из {props.total}\n  </span>\n)\nexport const PerksTotals: React.FC<IPerkTotals> = props => (\n  <div className=\"pers-totals\">\n    <p>Использовано:</p>\n    <p>\n      Изьяны:\n      <SpanOfTotal val={props.hindrances[2]} total={props.hindrances_total[2]}>крупных</SpanOfTotal>\n      ,\n      <SpanOfTotal val={props.hindrances[1]} total={props.hindrances_total[1]}>мелких</SpanOfTotal>\n    </p>\n    <p>\n      Перки:\n      <SpanOfTotal val={props.perks} total={props.perks_total} />\n    </p>\n    <p>\n      Черты:\n      <SpanOfTotal val={props.edges} total={props.edges_total} />\n    </p>\n  </div>\n)","import React from 'react';\nimport './App.css';\nimport Hero from './model/hero'\nimport { statsTypes, heroSkills } from './model/types'\nimport PerkController from './model/perksController'\nimport { edges, hindrances, perks } from './model/data-edges'\nimport { PerkList, PerksTotals } from './perks'\nimport { EdgeMap } from './model/edgeCollection';\n\nconst h = new Hero()\nconst p = new PerkController(edges, hindrances, perks, h)\n\nconst attr_names = {\n  [statsTypes.agility.toString()]: \"Ловкость\",\n  [statsTypes.smarts.toString()]: \"Интелект\",\n  [statsTypes.spirit.toString()]: \"Дух\",\n  [statsTypes.strength.toString()]: \"Сила\",\n  [statsTypes.vigor.toString()]: \"Энергия\",\n}\n\n\n\nconst Stat: React.FC<{ value: string, minus: () => void, plus: () => void }> = props => (\n  <div className=\"stat-selector\">\n    <span>{props.value}</span>\n    <button onClick={props.minus}>-</button>\n    <button onClick={props.plus}>+</button>\n  </div>\n)\nconst Bage: React.FC<{ extraClass?: string, name: string, value: string }> = props => (\n  <div className={'bage ' + props.extraClass}>\n    {props.name}\n    <span>{props.value}</span>\n  </div>\n)\n\nclass App extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      stats: h.getStats(),\n      points: h.getPoints(),\n      skills: h.getSkills(),\n      hindrances: p.hindrances.keys(),\n      edges: p.edges.keys(),\n      perks: p.perks.keys()\n    }\n\n    p.edges.onChange = () => this.setState({ edges: p.edges.keys() })\n    p.hindrances.onChange = () => this.setState({ hindrances: p.hindrances.keys() })\n    p.perks.onChange = () => {\n      this.setState({ perks: p.perks.keys() })\n      this.update()\n    }\n  }\n  update() {\n    this.setState({\n      stats: h.getStats(),\n      points: h.getPoints(),\n      skills: h.getSkills()\n    })\n  }\n  changeStats(statKey: number, add: boolean) {\n    if (h.addStats(statKey, add)) this.update()\n  }\n  changeSkill(name: string, add: boolean) {\n    if (h.addSkill(name, add)) this.update()\n  }\n  getStatsControllers(stats: any) {\n    const keys = Object.keys(stats)\n    return (\n      <div className=\"stats\">\n        {keys.map(k => {\n          const ki = parseInt(k)\n          return (\n            <Stat\n              value={`${attr_names[ki]}: ${stats[k]}`}\n              minus={() => this.changeStats(ki, false)}\n              plus={() => this.changeStats(ki, true)}\n            />)\n        })}\n      </div>)\n  }\n  getSkills = (skills: heroSkills) => {\n    let cur_attr = skills[0].attribute\n    let all_arr = []\n    let arr: any[] = []\n    for (const skill of skills) {\n      const skill_component = (\n        <Stat\n          value={`${skill.name}: ${skill.value}`}\n          minus={() => this.changeSkill(skill.name, false)}\n          plus={() => this.changeSkill(skill.name, true)}\n        />\n      )\n      if (skill.attribute === cur_attr)\n        arr.push(skill_component)\n      else {\n        all_arr.push(\n          <div className=\"skill-group\">\n            <div className=\"skill-group-name\">{attr_names[cur_attr]}</div>\n            {arr}\n          </div>\n        )\n        arr = [skill_component]\n        cur_attr = skill.attribute\n      }\n    }\n    all_arr.push(\n      <div className=\"skill-group\">\n        <div className=\"skill-group-name\">{attr_names[cur_attr]}</div>\n        {arr}\n      </div>\n    )\n    return (\n      <div className=\"skills\">\n        {all_arr}\n      </div>\n    )\n  }\n  getPointsBages = (points: any) => (\n    <div className=\"bages\">\n      <Bage extraClass={points.attributes < 0 ? 'invalid' : ''}\n        name=\"Очков персонажа:\" value={points.attributes} />\n      <Bage extraClass={points.skills < 0 ? 'invalid' : ''}\n        name=\"Очков умений:\" value={points.skills} />\n      <Bage name=\"Всего очков умений :\" value={points.skills_total} />\n    </div>\n  )\n  render() {\n    const state = this.state\n    const statsControllers = this.getStatsControllers(state.stats)\n    const bages = this.getPointsBages(state.points)\n    const skills = this.getSkills(state.skills)\n\n    const hindrancesUsedMap: EdgeMap = {}\n    for (const key of p.hindrances.keys()) hindrancesUsedMap[key] = p.hindrances.all[key]\n    const hindrances = (\n      <PerkList perkMap={p.hindrances.all} actionCaption=\"+\" action={(key) => p.hindrances.add(key)}>\n        <p>Изьяны</p>\n      </PerkList>\n    )\n    const hindrancesUsed = (\n      <PerkList perkMap={hindrancesUsedMap} actionCaption=\"-\" action={(key) => p.hindrances.remove(key)}>\n        <p>Используемые изьяны</p>\n      </PerkList>\n    )\n\n    const edgesUsedMap: EdgeMap = {}\n    for (const key of p.edges.keys()) edgesUsedMap[key] = p.edges.all[key]\n    const edges = (\n      <PerkList perkMap={p.edges.all} actionCaption=\"+\" action={(key) => p.edges.add(key)}>\n        <p>Черты</p>\n      </PerkList>\n    )\n    for (const key of p.edges.keys()) edgesUsedMap[key] = p.edges.all[key]\n    const edgesUsed = (\n      <PerkList perkMap={edgesUsedMap} actionCaption=\"-\" action={(key) => p.edges.remove(key)}>\n        <p>Используемы черты</p>\n      </PerkList>\n    )\n\n    const perksUsedMap: EdgeMap = {}\n    for (const key of p.perks.keys()) {\n      let tmp_key = key\n      while (perksUsedMap[tmp_key]) tmp_key = tmp_key + key\n      perksUsedMap[tmp_key] = p.perks.all[key]\n    }\n\n    const perks = (\n      <PerkList perkMap={p.perks.all} actionCaption=\"+\" action={(key) => p.perks.add(key)}>\n        <p>Перки</p>\n      </PerkList>\n    )\n    const perksUsed = (\n      <PerkList perkMap={perksUsedMap} actionCaption=\"-\" action={(key) => p.perks.remove(key)}>\n        <p>Используемые перки</p>\n      </PerkList>\n    )\n    return (\n      <div className=\"App\">\n        {bages}\n        {statsControllers}\n        {skills}\n        <PerksTotals {...p.getPoints()} />\n        <div className=\"perks-container\">\n          {hindrancesUsed}\n          {perksUsed}\n          {edgesUsed}\n          {hindrances}\n          {perks}\n          {edges}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { IEdge } from \"./edgeCollection\";\n\nexport type hSize = 1 | 2\nexport type Hindrance = {\n  name: string\n  describtion: string\n  size: hSize\n}\n\nexport type Edge = {\n  name: string\n  describtion: string\n  size: hSize\n  requirement: Object\n}\n\n// изьяны\nexport const hindrances: Hindrance[] = [\n  {\n    name: 'Болезненность',\n    describtion: '−2 к проверкам выносливости на сопротивление болезням, ядам и природным условиям.',\n    size: 1\n  },\n  {\n    name: 'Болезненность',\n    describtion: '−4 к проверкам выносливости на сопротивление болезням, ядам и природным условиям.',\n    size: 2\n  },\n  {\n    name: 'Боязнь',\n    describtion: '',\n    size: 2\n  },\n  {\n    name: 'Боязнь',\n    describtion: '',\n    size: 1\n  },\n  {\n    name: 'В розыске',\n    describtion: '',\n    size: 2\n  },\n  {\n    name: \"В розыске\",\n    describtion: '',\n    size: 1\n  },\n  {\n    name: \"Гемофилия\",\n    describtion: '',\n    size: 2\n  },\n]\n// черты\nexport const edges: Edge[] = [\n  {\n    name: 'Адепт* (Н, МД (чудеса), вера d8, драка d8)',\n    describtion: 'ББ 2 голыми руками за 1 ПС; часть сил — свободное действие',\n    size: 1,\n    requirement: {}\n  },\n  {\n    name: 'Акробат* (Н, ловкость d8, сила d6)',\n    describtion: '+2 к проверкам ловкости; защита +1, если нет нагрузки',\n    size: 1,\n    requirement: {}\n  },\n  {\n    name: 'Амбидекстр* (Н, ловкость d8)',\n    describtion: 'нет штрафа –2 за непривычную руку',\n    size: 2,\n    requirement: {}\n  },\n  {\n    name: 'Аристократ* (Н)',\n    describtion: 'харизма +2; благородное происхождение, высокий статус и благосостояние',\n    size: 1,\n    requirement: {}\n  },\n]\n\n\nexport const perks: IEdge[] = [\n  { name: 'добавить аттрибут', size: 2, describtion: '' },\n  { name: 'приобрести черту', size: 2, describtion: '' },\n  { name: 'добавить навык', size: 1, describtion: '' },\n  { name: 'добавить денег', size: 1, describtion: '' }\n]\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export interface IEdge {\n  name: string\n  size: 1 | 2\n  describtion?: string\n}\n\nexport type EdgeMap = {\n  [key: string]: IEdge\n}\n\nexport class EdgeCollection {\n  availabe = { 1: 2, 2: 1 }\n  all: EdgeMap\n  selected: string[] = []\n  onChange: () => void = () => {}\n  constructor(all_edges: IEdge[]) {\n    const edges: EdgeMap = {}\n    for (const e of all_edges) edges[`${e.name}_${e.size}`] = e\n    this.all = edges\n  }\n  add(key: string) {\n    if (this.selected.includes(key)) return false\n    this.selected.push(key)\n    this.onChange()\n    return true\n  }\n  remove(key: string) {\n    const index = this.selected.indexOf(key)\n    if (index === -1) return false\n    const spliced = this.selected.splice(index, 1)\n    console.log(`removed: ${spliced}`)\n    this.onChange()\n    return true\n  }\n  count() {\n    const res = { 1: 0, 2: 0 }\n    for (const k of this.selected) res[this.all[k].size] += 1\n    return res\n  }\n  keys = (): string[] => this.selected\n}\n\n// tests\nif (module.parent === null) {\n  const ec = new EdgeCollection([\n    { name: 'aa', size: 1 },\n    { name: 'aa', size: 2 },\n    { name: 'bb', size: 1 },\n    { name: 'cc', size: 2 }\n  ])\n\n  console.dir(ec)\n  ec.add('aa_1')\n  ec.add('aa_1')\n  ec.add('bb_1')\n  ec.remove('bb_1')\n  ec.add('cc_2')\n  console.dir(ec)\n  console.log(ec.count())\n}"],"sourceRoot":""}